package net.openvpn.openvpn;/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class ClientAPI_Config extends ConfigCommon {
  private transient long swigCPtr;

  protected ClientAPI_Config(long cPtr, boolean cMemoryOwn) {
    super(ovpncliJNI.ClientAPI_Config_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ClientAPI_Config obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(ClientAPI_Config obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ovpncliJNI.delete_ClientAPI_Config(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setContent(String value) {
    ovpncliJNI.ClientAPI_Config_content_set(swigCPtr, this, value);
  }

  public String getContent() {
    return ovpncliJNI.ClientAPI_Config_content_get(swigCPtr, this);
  }

  public void setContentList(SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t value) {
    ovpncliJNI.ClientAPI_Config_contentList_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t getContentList() {
    long cPtr = ovpncliJNI.ClientAPI_Config_contentList_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t(cPtr, false);
  }

  public void setProtoOverride(String value) {
    ovpncliJNI.ClientAPI_Config_protoOverride_set(swigCPtr, this, value);
  }

  public String getProtoOverride() {
    return ovpncliJNI.ClientAPI_Config_protoOverride_get(swigCPtr, this);
  }

  public void setProtoVersionOverride(int value) {
    ovpncliJNI.ClientAPI_Config_protoVersionOverride_set(swigCPtr, this, value);
  }

  public int getProtoVersionOverride() {
    return ovpncliJNI.ClientAPI_Config_protoVersionOverride_get(swigCPtr, this);
  }

  public void setAllowUnusedAddrFamilies(String value) {
    ovpncliJNI.ClientAPI_Config_allowUnusedAddrFamilies_set(swigCPtr, this, value);
  }

  public String getAllowUnusedAddrFamilies() {
    return ovpncliJNI.ClientAPI_Config_allowUnusedAddrFamilies_get(swigCPtr, this);
  }

  public void setCompressionMode(String value) {
    ovpncliJNI.ClientAPI_Config_compressionMode_set(swigCPtr, this, value);
  }

  public String getCompressionMode() {
    return ovpncliJNI.ClientAPI_Config_compressionMode_get(swigCPtr, this);
  }

  public void setExternalPkiAlias(String value) {
    ovpncliJNI.ClientAPI_Config_externalPkiAlias_set(swigCPtr, this, value);
  }

  public String getExternalPkiAlias() {
    return ovpncliJNI.ClientAPI_Config_externalPkiAlias_get(swigCPtr, this);
  }

  public void setPeerInfo(SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t value) {
    ovpncliJNI.ClientAPI_Config_peerInfo_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t getPeerInfo() {
    long cPtr = ovpncliJNI.ClientAPI_Config_peerInfo_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_openvpn__ClientAPI__KeyValue_t(cPtr, false);
  }

  public ClientAPI_Config() {
    this(ovpncliJNI.new_ClientAPI_Config(), true);
  }

}
